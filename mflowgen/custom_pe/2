from random import random
import math
import numpy as np
import binascii
import struct

def main():
    f = open("test_vectors.txt", "w")
    raw = open("raw_input.csv", "r")

    fields = raw.readline().split(",")
    
    def get_hex (x, l):
      return str(binascii.hexlify(struct.pack('>H', x)))[2:2+l] # H is for unsigned short -- 16 bits

    while True:
        line = raw.readline().strip()
        if not line:
            break

        str_nums = line.split(",")
        nums = [int(thing) for thing in str_nums]

        to_write = ""

        i = 0;
        for num in nums:
            width = 16
            if 'config_config' in fields[i]:
                width = 32
            elif 'read_config_data_in' == fields[i]:
                width = 32

            hex_num = get_hex(num, int(math.log(width, 2)))
            if len(hex_num) == 8:
                hex_num = hex_num[7:4] + "_" + hex_num[0:3]
            to_write = hex_num + "_" + to_write

            i += 1
        f.write(to_write[:-1])
        print(i)
        print(len(to_write.replace("_", "")))
        return
    
#    while (i < num_vectors):
#      a = np.uint16(math.floor(random() * (2**16 - 1)))
#      b = np.uint16(math.floor(random() * (2**16 - 1)))
#      if (a != 0) and (b != 0):
#        c = math.gcd(a, b)
#        f.write(str(get_hex(c)) + '_' + str(get_hex(a)) + '_' + str(get_hex(b)) + '\n') 
#        i = i + 1
    f.close()
    raw.close()

if __name__ == '__main__':
    main()
